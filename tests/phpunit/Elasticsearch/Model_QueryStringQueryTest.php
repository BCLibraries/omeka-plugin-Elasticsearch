<?php

require_once __DIR__ . '/../../../libraries/Elasticsearch/Model/SubQuery.php';
require_once __DIR__ . '/../../../libraries/Elasticsearch/Exception/BadQueryException.php';
require_once __DIR__ . '/../../../libraries/Elasticsearch/Model/QueryStringQuery.php';

use PHPUnit\Framework\TestCase;

class Model_QueryStringQueryTest extends TestCase
{
    /**
     * @var Elasticsearch_Model_QueryStringQuery
     */
    private $query;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->query = Elasticsearch_Model_QueryStringQuery::build('bar');
    }

    public function testBuildCreatesQueryStringQuery(): void
    {
        $expected = [
            'query_string' => [
                'query' => 'bar'
            ]
        ];
        $this->assertEquals($expected, $this->query->toArray());
    }

    public function testSetsDefaultOperator(): void
    {
        $expected = [
            'query_string' => [
                'query' => 'bar',
                'default_operator' => 'AND'
            ]
        ];
        $query = $this->query->defaultOperator('AND');
        $this->assertEquals($expected, $query->toArray());
    }

    public function testBadDefaultOperatorThrowsExpception(): void
    {
        $this->expectException('Elasticsearch_Exception_BadQueryException');
        $query = $this->query->defaultOperator('baz');
    }

    public function testSetsDefaultField(): void
    {
        $expected = [
            'query_string' => [
                'query' => 'bar',
                'default_field' => 'foo'
            ]
        ];
        $query = $this->query->defaultField('foo');
        $this->assertEquals($expected, $query->toArray());
    }
}
